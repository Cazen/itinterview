id;option_text;del_yn;status_id;question_master_id


1000;Apache License 1.0;N;2;1000
1001;Apache License 3.0;N;2;1000
1002;MIT License;N;2;1000
1003;Apache Free License;N;2;1000
1004;BSD License;N;2;1000
1005;GPL License;N;2;1000
1006;SQL 형식의 Query를 통해 질의한다;N;2;1001
1007;Hive 고유의 Command Line Tool을 제공한다;N;2;1001
1008;Apache Hadoop의 Sub-Project였다;N;2;1001
1009;Map Reduce로 Job을 관리할 때 보다 유지보수가 간편하다;N;2;1002
1010;SQL-Like Language를 제공하여 편리한 사용자 경험을 제공한다;N;2;1002
1011;확장을 위해 UDF, UDTF등을 사용할 수 있다;N;2;1002
1012;ORC나 Parquet등의 효율화된 Columnar storage format을 이용 가능하다;N;2;1002
1013;JOIN, Having, SubQuery, Union ALL을 지원한다;N;2;1003
1014;Nested Structure(Map, Array)를 지원한다;N;2;1003
1015;Partitioning을 통해 Full Scan을 방지할 수 있다;N;2;1003
1016;Parallel Option을 통해 Job을 병렬로 수행할 수 있다;N;2;1003
1017;SORT BY 구문을 통해 정렬 시 Reducer가 반드시 1개만 수행된다;N;2;1004
1018;Hive의 Group By 문은 반드시 Reducer에서만 실행이 가능하다;N;2;1004
1019;CREATE 문을 통해 TABLE을 생성 시, Init Check를 하기 위한 Location을 반드시 지정해야 한다;N;2;1004
1020;EXPLAIN을 Query 앞에 붙여 실행 계획을 확인할 수 있다;N;2;1005
1021;Execution Engine으로 MapReduce외의 다른 Engine을 선택할 수 있다;N;2;1005
1022;Hive 실행 계획은 Stage 단위로 분할되어 처리되게 된다;N;2;1005
1023;ADD JAR ${JarLocation};N;2;1006
1024;CREATE DATABASE ${databaseName};N;2;1006
1025;SET hive.map.aggr=true;N;2;1006
1026;SELECT * FROM tableA LIMIT 5;N;2;1006
1027;Data를 Partitioning하여 물리적 보안을 강화한다;N;2;1007
1028;Data를 Partitioning하여 Network 전송 시 보안을 강화한다;N;2;1007
1029;Data를 정렬된 상태로 유지하여 성능 향상에 도움을 준다;N;2;1007
1030;Data를 병렬로 Load할 수 있도록 도와준다;N;2;1007
1031;Multi Insert Statement의 사용이 가능하다(From Insert~ Insert~);N;2;1008
1032;Dynamic Partition의 사용이 가능하다;N;2;1008
1033;Static Partition의 사용이 가능하다;N;2;1008
1034;Parallel Execution을 통해 성능 향상이 가능하다;N;2;1009
1035;중간 처리 결과를 압축하여 성능 향상이 가능하다;N;2;1009
1036;Partitioning을 이용하여 성능 향상이 가능하다;N;2;1009
1037;Vectorization를 이용하여 성능 향상이 가능하다;N;2;1009



