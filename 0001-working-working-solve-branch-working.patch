From 9d37fb5a1aa02cf2e22b773300c9b68efbffbfd3 Mon Sep 17 00:00:00 2001
From: Cazen Lee <cazen@apache.org>
Date: Mon, 23 Jan 2017 00:55:47 +0900
Subject: [PATCH] working working solve branch working

---
 .../java/com/cazen/iti/domain/QuestionMaster.java  |  33 +++++-
 .../cazen/iti/domain/QuestionMasterForUser.java    |  20 ++++
 .../cazen/iti/domain/ResultTryQuestionForUser.java |  21 ++++
 .../cazen/iti/domain/SubmitTryQuestionForUser.java | 115 +++++++++++++++----
 .../com/cazen/iti/service/util/AES256Util.java     |  23 +++-
 .../cazen/iti/web/rest/TryQuestionResource.java    | 125 ++++++++++++++++++---
 src/main/resources/.h2.server.properties           |   2 +-
 .../try-question/tryQuestion-new.controller.js     |  27 ++++-
 .../try-question/tryQuestion-new.service.js        |   9 +-
 .../try-question/tryQuestion-result.controller.js  |  37 ++++++
 .../question/try-question/tryQuestion-result.html  | 100 +++++++++++++++++
 .../try-question/tryQuestion.controller.js         |  30 -----
 .../app/question/try-question/tryQuestion.state.js |  34 ++++++
 .../webapp/content/css/source/components/steps.css |   2 +-
 .../css/source/multistepform/multiStepForm.css     |   2 +-
 .../images/itinterview_icon_white_border.png       | Bin 0 -> 14810 bytes
 .../itinterview_icon_white_border_transparent.png  | Bin 0 -> 12548 bytes
 src/main/webapp/index.html                         |   1 +
 19 files changed, 502 insertions(+), 79 deletions(-)
 create mode 100644 src/main/java/com/cazen/iti/domain/ResultTryQuestionForUser.java
 create mode 100644 src/main/webapp/app/question/try-question/tryQuestion-result.controller.js
 create mode 100644 src/main/webapp/app/question/try-question/tryQuestion-result.html
 create mode 100644 src/main/webapp/content/images/itinterview_icon_white_border.png
 create mode 100644 src/main/webapp/content/images/itinterview_icon_white_border_transparent.png

diff --git a/src/main/java/com/cazen/iti/domain/QuestionMaster.java b/src/main/java/com/cazen/iti/domain/QuestionMaster.java
index fb9819a..82a53ae 100644
--- a/src/main/java/com/cazen/iti/domain/QuestionMaster.java
+++ b/src/main/java/com/cazen/iti/domain/QuestionMaster.java
@@ -60,10 +60,30 @@ public class QuestionMaster implements Serializable {
     @ManyToOne
     private User author;
 
-    @OneToOne
+    @OneToOne(cascade={CascadeType.ALL})
     @JoinColumn(unique = true)
     private QuestionMasterStatics questionMasterStatics;
 
+    @Transient
+    @JsonSerialize
+    private String generatedId;
+
+    @Transient
+    @JsonSerialize
+    private String rightWrongString;
+
+    @Transient
+    @JsonSerialize
+    private String selectedAnswerString;
+
+    public String getSelectedAnswerString() {
+        return selectedAnswerString;
+    }
+
+    public void setSelectedAnswerString(String selectedAnswerString) {
+        this.selectedAnswerString = selectedAnswerString;
+    }
+
     public String getGeneratedId() {
         return generatedId;
     }
@@ -71,9 +91,14 @@ public class QuestionMaster implements Serializable {
     public void setGeneratedId(String generatedId) {
         this.generatedId = generatedId;
     }
-    @Transient
-    @JsonSerialize
-    private String generatedId;
+
+    public String getRightWrongString() {
+        return rightWrongString;
+    }
+
+    public void setRightWrongString(String rightWrongString) {
+        this.rightWrongString = rightWrongString;
+    }
 
     public Set<AnswersForUser> getAnswersForUsersSet() {
         return answersForUsersSet;
diff --git a/src/main/java/com/cazen/iti/domain/QuestionMasterForUser.java b/src/main/java/com/cazen/iti/domain/QuestionMasterForUser.java
index cbcc052..dbbfa1f 100644
--- a/src/main/java/com/cazen/iti/domain/QuestionMasterForUser.java
+++ b/src/main/java/com/cazen/iti/domain/QuestionMasterForUser.java
@@ -16,6 +16,26 @@ public class QuestionMasterForUser {
 
     private String generatedId;
 
+    private String rightWrong;
+
+    private int erningPoint;
+
+    public int getErningPoint() {
+        return erningPoint;
+    }
+
+    public void setErningPoint(int erningPoint) {
+        this.erningPoint = erningPoint;
+    }
+
+    public String getRightWrong() {
+        return rightWrong;
+    }
+
+    public void setRightWrong(String rightWrong) {
+        this.rightWrong = rightWrong;
+    }
+
     public List<QuestionMaster> getQuestionMasterList() {
         return questionMasterList;
     }
diff --git a/src/main/java/com/cazen/iti/domain/ResultTryQuestionForUser.java b/src/main/java/com/cazen/iti/domain/ResultTryQuestionForUser.java
new file mode 100644
index 0000000..a9f8d88
--- /dev/null
+++ b/src/main/java/com/cazen/iti/domain/ResultTryQuestionForUser.java
@@ -0,0 +1,21 @@
+package com.cazen.iti.domain;
+
+import java.util.List;
+
+/**
+ * A QuestionMaster.
+ */
+public class ResultTryQuestionForUser {
+
+    private static final long serialVersionUID = 1L;
+
+    private List<QuestionMaster> questionMasterList;
+
+    public List<QuestionMaster> getQuestionMasterList() {
+        return questionMasterList;
+    }
+
+    public void setQuestionMasterList(List<QuestionMaster> questionMasterList) {
+        this.questionMasterList = questionMasterList;
+    }
+}
diff --git a/src/main/java/com/cazen/iti/domain/SubmitTryQuestionForUser.java b/src/main/java/com/cazen/iti/domain/SubmitTryQuestionForUser.java
index 482bbbd..6f50271 100644
--- a/src/main/java/com/cazen/iti/domain/SubmitTryQuestionForUser.java
+++ b/src/main/java/com/cazen/iti/domain/SubmitTryQuestionForUser.java
@@ -1,7 +1,6 @@
 package com.cazen.iti.domain;
 
 import java.time.ZonedDateTime;
-import java.util.List;
 
 /**
  * A QuestionMaster.
@@ -14,6 +13,20 @@ public class SubmitTryQuestionForUser {
 
     private ZonedDateTime startTime;
 
+    private String questionOne;
+
+    private String questionTwo;
+
+    private String questionThree;
+
+    private String questionFour;
+
+    private String questionFive;
+
+    private String questionSix;
+
+    private String questionSeven;
+
     private String answerOne;
 
     private String answerTwo;
@@ -100,31 +113,86 @@ public class SubmitTryQuestionForUser {
         this.answerSeven = answerSeven;
     }
 
+    public String getQuestionOne() {
+        return questionOne;
+    }
+
+    public void setQuestionOne(String questionOne) {
+        this.questionOne = questionOne;
+    }
+
+    public String getQuestionTwo() {
+        return questionTwo;
+    }
+
+    public void setQuestionTwo(String questionTwo) {
+        this.questionTwo = questionTwo;
+    }
+
+    public String getQuestionThree() {
+        return questionThree;
+    }
+
+    public void setQuestionThree(String questionThree) {
+        this.questionThree = questionThree;
+    }
+
+    public String getQuestionFour() {
+        return questionFour;
+    }
+
+    public void setQuestionFour(String questionFour) {
+        this.questionFour = questionFour;
+    }
+
+    public String getQuestionFive() {
+        return questionFive;
+    }
+
+    public void setQuestionFive(String questionFive) {
+        this.questionFive = questionFive;
+    }
+
+    public String getQuestionSix() {
+        return questionSix;
+    }
+
+    public void setQuestionSix(String questionSix) {
+        this.questionSix = questionSix;
+    }
+
+    public String getQuestionSeven() {
+        return questionSeven;
+    }
+
+    public void setQuestionSeven(String questionSeven) {
+        this.questionSeven = questionSeven;
+    }
+
     @Override
     public boolean equals(Object o) {
-        if (this == o)
-            return true;
-        if (o == null || getClass() != o.getClass())
-            return false;
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
 
         SubmitTryQuestionForUser that = (SubmitTryQuestionForUser) o;
 
-        if (generatedId != null ? !generatedId.equals(that.generatedId) : that.generatedId != null)
-            return false;
-        if (startTime != null ? !startTime.equals(that.startTime) : that.startTime != null)
-            return false;
-        if (answerOne != null ? !answerOne.equals(that.answerOne) : that.answerOne != null)
-            return false;
-        if (answerTwo != null ? !answerTwo.equals(that.answerTwo) : that.answerTwo != null)
-            return false;
-        if (answerThree != null ? !answerThree.equals(that.answerThree) : that.answerThree != null)
-            return false;
-        if (answerFour != null ? !answerFour.equals(that.answerFour) : that.answerFour != null)
-            return false;
-        if (answerFive != null ? !answerFive.equals(that.answerFive) : that.answerFive != null)
+        if (generatedId != null ? !generatedId.equals(that.generatedId) : that.generatedId != null) return false;
+        if (startTime != null ? !startTime.equals(that.startTime) : that.startTime != null) return false;
+        if (questionOne != null ? !questionOne.equals(that.questionOne) : that.questionOne != null) return false;
+        if (questionTwo != null ? !questionTwo.equals(that.questionTwo) : that.questionTwo != null) return false;
+        if (questionThree != null ? !questionThree.equals(that.questionThree) : that.questionThree != null)
             return false;
-        if (answerSix != null ? !answerSix.equals(that.answerSix) : that.answerSix != null)
+        if (questionFour != null ? !questionFour.equals(that.questionFour) : that.questionFour != null) return false;
+        if (questionFive != null ? !questionFive.equals(that.questionFive) : that.questionFive != null) return false;
+        if (questionSix != null ? !questionSix.equals(that.questionSix) : that.questionSix != null) return false;
+        if (questionSeven != null ? !questionSeven.equals(that.questionSeven) : that.questionSeven != null)
             return false;
+        if (answerOne != null ? !answerOne.equals(that.answerOne) : that.answerOne != null) return false;
+        if (answerTwo != null ? !answerTwo.equals(that.answerTwo) : that.answerTwo != null) return false;
+        if (answerThree != null ? !answerThree.equals(that.answerThree) : that.answerThree != null) return false;
+        if (answerFour != null ? !answerFour.equals(that.answerFour) : that.answerFour != null) return false;
+        if (answerFive != null ? !answerFive.equals(that.answerFive) : that.answerFive != null) return false;
+        if (answerSix != null ? !answerSix.equals(that.answerSix) : that.answerSix != null) return false;
         return answerSeven != null ? answerSeven.equals(that.answerSeven) : that.answerSeven == null;
 
     }
@@ -133,6 +201,13 @@ public class SubmitTryQuestionForUser {
     public int hashCode() {
         int result = generatedId != null ? generatedId.hashCode() : 0;
         result = 31 * result + (startTime != null ? startTime.hashCode() : 0);
+        result = 31 * result + (questionOne != null ? questionOne.hashCode() : 0);
+        result = 31 * result + (questionTwo != null ? questionTwo.hashCode() : 0);
+        result = 31 * result + (questionThree != null ? questionThree.hashCode() : 0);
+        result = 31 * result + (questionFour != null ? questionFour.hashCode() : 0);
+        result = 31 * result + (questionFive != null ? questionFive.hashCode() : 0);
+        result = 31 * result + (questionSix != null ? questionSix.hashCode() : 0);
+        result = 31 * result + (questionSeven != null ? questionSeven.hashCode() : 0);
         result = 31 * result + (answerOne != null ? answerOne.hashCode() : 0);
         result = 31 * result + (answerTwo != null ? answerTwo.hashCode() : 0);
         result = 31 * result + (answerThree != null ? answerThree.hashCode() : 0);
@@ -142,4 +217,4 @@ public class SubmitTryQuestionForUser {
         result = 31 * result + (answerSeven != null ? answerSeven.hashCode() : 0);
         return result;
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/com/cazen/iti/service/util/AES256Util.java b/src/main/java/com/cazen/iti/service/util/AES256Util.java
index 095af7c..1f5c61e 100644
--- a/src/main/java/com/cazen/iti/service/util/AES256Util.java
+++ b/src/main/java/com/cazen/iti/service/util/AES256Util.java
@@ -1,5 +1,6 @@
 package com.cazen.iti.service.util;
 
+import com.cazen.iti.domain.SubmitTryQuestionForUser;
 import org.apache.commons.codec.binary.Base64;
 import org.springframework.stereotype.Service;
 
@@ -29,7 +30,7 @@ public class AES256Util {
         byte[] keyBytes = new byte[16];
         byte[] b = "ItInterviewSecr!".getBytes("UTF-8");
         int len = b.length;
-        if(len > keyBytes.length)
+        if (len > keyBytes.length)
             len = keyBytes.length;
         System.arraycopy(b, 0, keyBytes, 0, len);
         SecretKeySpec keySpec = new SecretKeySpec(keyBytes, "AES");
@@ -59,6 +60,24 @@ public class AES256Util {
 
         byte[] byteStr = Base64.decodeBase64(str.getBytes());
 
-        return new String(c.doFinal(byteStr),"UTF-8");
+        return new String(c.doFinal(byteStr), "UTF-8");
+    }
+
+    public SubmitTryQuestionForUser decryptSubmitTryQuestionForUser(SubmitTryQuestionForUser submitTryQuestionForUser)
+        throws java.io.UnsupportedEncodingException, NoSuchAlgorithmException,
+        NoSuchPaddingException, InvalidKeyException, InvalidAlgorithmParameterException,
+        IllegalBlockSizeException, BadPaddingException {
+
+        //Didn't create new entity cause using question Id
+        submitTryQuestionForUser.setGeneratedId(this.aesDecode(submitTryQuestionForUser.getGeneratedId()));
+        submitTryQuestionForUser.setAnswerOne(this.aesDecode(submitTryQuestionForUser.getAnswerOne()));
+        submitTryQuestionForUser.setAnswerTwo(this.aesDecode(submitTryQuestionForUser.getAnswerTwo()));
+        submitTryQuestionForUser.setAnswerThree(this.aesDecode(submitTryQuestionForUser.getAnswerThree()));
+        submitTryQuestionForUser.setAnswerFour(this.aesDecode(submitTryQuestionForUser.getAnswerFour()));
+        submitTryQuestionForUser.setAnswerFive(this.aesDecode(submitTryQuestionForUser.getAnswerFive()));
+        submitTryQuestionForUser.setAnswerSix(this.aesDecode(submitTryQuestionForUser.getAnswerSix()));
+        submitTryQuestionForUser.setAnswerSeven(this.aesDecode(submitTryQuestionForUser.getAnswerSeven()));
+
+        return submitTryQuestionForUser;
     }
 }
diff --git a/src/main/java/com/cazen/iti/web/rest/TryQuestionResource.java b/src/main/java/com/cazen/iti/web/rest/TryQuestionResource.java
index a4f1ea3..c3b8f6b 100644
--- a/src/main/java/com/cazen/iti/web/rest/TryQuestionResource.java
+++ b/src/main/java/com/cazen/iti/web/rest/TryQuestionResource.java
@@ -1,8 +1,11 @@
 package com.cazen.iti.web.rest;
 
 import com.cazen.iti.domain.*;
+import com.cazen.iti.repository.QuestionMasterRepository;
+import com.cazen.iti.repository.QuestionMasterStaticsRepository;
+import com.cazen.iti.repository.RightAnswerRepository;
+import com.cazen.iti.repository.WrongAnswerRepository;
 import com.cazen.iti.service.CommonCodeService;
-import com.cazen.iti.service.QuestionMasterService;
 import com.cazen.iti.service.TryQustionService;
 import com.cazen.iti.service.util.AES256Util;
 import com.cazen.iti.web.rest.util.HeaderUtil;
@@ -14,8 +17,8 @@ import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
 
 import javax.inject.Inject;
-import java.net.URI;
 import java.net.URISyntaxException;
+import java.time.ZoneId;
 import java.time.ZonedDateTime;
 import java.util.*;
 
@@ -32,7 +35,13 @@ public class TryQuestionResource {
     @Inject
     private CommonCodeService commonCodeService;
     @Inject
-    private QuestionMasterService questionMasterService;
+    private QuestionMasterRepository questionMasterRepository;
+    @Inject
+    private RightAnswerRepository rightAnswerRepository;
+    @Inject
+    private WrongAnswerRepository wrongAnswerRepository;
+    @Inject
+    private QuestionMasterStaticsRepository questionMasterStaticsRepository;
     @Inject
     private AES256Util aes256Util;
 
@@ -65,16 +74,13 @@ public class TryQuestionResource {
     public ResponseEntity<QuestionMasterForUser> getQuestionListbyCategory3(@RequestBody Map<String, String> category3SelectboxVal) throws URISyntaxException {
 
         log.debug("REST(POST) request to get tryQuestionNew : {}", category3SelectboxVal.get("category3SelectboxVal"));
-        log.debug("category3SelectboxVal = " + category3SelectboxVal);
         if (category3SelectboxVal == null || category3SelectboxVal.get("category3SelectboxVal").length() == 0) {
             return ResponseEntity.badRequest().headers(HeaderUtil.createFailureAlert("category3Selectbox", "notextists", "카테고리를 선택해 주세요")).body(null);
         }
 
         List<Long> questionMasterIdList =
             tryQuestionService.getQuestionMasterIdList7Randomly(commonCodeService.findByCd_Id(category3SelectboxVal.get("category3SelectboxVal")).getId());
-        QuestionMasterForUser questionMasterForUser = assembleQuestionMasterForUser(questionMasterIdList);
-
-        log.debug("working working questionMasterForUser.getQuestionMasterList().size() = " + questionMasterForUser.getQuestionMasterList().size());
+        QuestionMasterForUser questionMasterForUser = assembleQuestionMasterForUserForTryPages(questionMasterIdList);
 
         return new ResponseEntity<>(questionMasterForUser, HttpStatus.OK);
     }
@@ -90,16 +96,109 @@ public class TryQuestionResource {
     @Timed
     public ResponseEntity<QuestionMasterForUser> submitTryQuestion(@RequestBody SubmitTryQuestionForUser submitTryQuestionForUser) throws URISyntaxException {
 
-        log.debug("REST(POST) request to get tryQuestionNew : {}", submitTryQuestionForUser.getStartTime() + "_" + submitTryQuestionForUser.getAnswerOne());
+        QuestionMasterForUser questionMasterForUser;
+        try {
+            SubmitTryQuestionForUser decryptedSubmitEntity = aes256Util.decryptSubmitTryQuestionForUser(submitTryQuestionForUser);
+            String[] generatedId = decryptedSubmitEntity.getGeneratedId().split("_");
+
+            //Compare submitTime - startTime > 5min 5sec then raise exception
+            ZonedDateTime startTime = ZonedDateTime.of(Integer.parseInt(generatedId[0]), Integer.parseInt(generatedId[1]), Integer.parseInt(generatedId[2]), Integer.parseInt(generatedId[3])
+                , Integer.parseInt(generatedId[4]), Integer.parseInt(generatedId[5]), Integer.parseInt(generatedId[6]), ZoneId.systemDefault());
+            startTime = startTime.plusMinutes(5).plusSeconds(5);
+            ZonedDateTime now = ZonedDateTime.now().withNano(0);
+
+            if(startTime.isBefore(now)) {
+                log.error("Time Limit exceed: ", startTime);
+                return new ResponseEntity<>(new QuestionMasterForUser(), HttpStatus.BAD_REQUEST);
+            }
 
-        return ResponseEntity.created(new URI("/app/question/tryQuestionAnswer"))
-            .headers(HeaderUtil.createEntityCreationAlert("tryQuestionAnswer", "test"))
-            .body(null);
 
+            questionMasterForUser = setQuestionMasterStaticsAndGetQMForUser(decryptedSubmitEntity);
+
+        } catch (Exception e) {
+            log.error("Exception while decryptedSubmitEntity: ", e);
+            return new ResponseEntity<>(new QuestionMasterForUser(), HttpStatus.BAD_REQUEST);
+        }
+        return new ResponseEntity<>(questionMasterForUser, HttpStatus.OK);
     }
 
+    private QuestionMasterForUser setQuestionMasterStaticsAndGetQMForUser(SubmitTryQuestionForUser decryptedSubmitEntity) {
+
+        QuestionMasterForUser questionMasterForUser = new QuestionMasterForUser();
+        List<QuestionMaster> questionMasterList = new ArrayList<>();
+        questionMasterForUser.setQuestionMasterList(questionMasterList);
+
+        QuestionMasterStatics questionMasterStatics;
+
+        List<Long> questionMasterIdList = new ArrayList<>();
+        questionMasterIdList.add(Long.parseLong(decryptedSubmitEntity.getQuestionOne()));
+        questionMasterIdList.add(Long.parseLong(decryptedSubmitEntity.getQuestionTwo()));
+        questionMasterIdList.add(Long.parseLong(decryptedSubmitEntity.getQuestionThree()));
+        questionMasterIdList.add(Long.parseLong(decryptedSubmitEntity.getQuestionFour()));
+        questionMasterIdList.add(Long.parseLong(decryptedSubmitEntity.getQuestionFive()));
+        questionMasterIdList.add(Long.parseLong(decryptedSubmitEntity.getQuestionSix()));
+        questionMasterIdList.add(Long.parseLong(decryptedSubmitEntity.getQuestionSeven()));
+
+        List<String> rightWrongList = new ArrayList<>();
+        rightWrongList.add(decryptedSubmitEntity.getAnswerOne());
+        rightWrongList.add(decryptedSubmitEntity.getAnswerTwo());
+        rightWrongList.add(decryptedSubmitEntity.getAnswerThree());
+        rightWrongList.add(decryptedSubmitEntity.getAnswerFour());
+        rightWrongList.add(decryptedSubmitEntity.getAnswerFive());
+        rightWrongList.add(decryptedSubmitEntity.getAnswerSix());
+        rightWrongList.add(decryptedSubmitEntity.getAnswerSeven());
+
+        //Will be replace to apply ELO rating
+        int erningPoint = 0;
+        for(int i = 0 ; i < 7 ; i++) {
+            QuestionMaster questionMaster = questionMasterRepository.findOne(questionMasterIdList.get(i));
+            questionMaster.setWrongAnswers(null);
+            questionMaster.setRightAnswers(null);
+
+            if (questionMaster.getQuestionMasterStatics() == null) {
+                questionMasterStatics = new QuestionMasterStatics();
+
+
+                questionMasterStatics.setDownVoteCount(0);
+                questionMasterStatics.setQuestionMaster(questionMaster);
+                questionMasterStatics.setRightCount(0);
+                questionMasterStatics.setUpVoteCount(0);
+                questionMasterStatics.setWrongCount(0);
+
+                questionMaster.setQuestionMasterStatics(questionMasterStatics);
+                questionMasterRepository.saveAndFlush(questionMaster);
+            } else {
+                questionMasterStatics = questionMasterStaticsRepository.findOne(questionMaster.getQuestionMasterStatics().getId());
+            }
+
+            if ("W".equals(rightWrongList.get(i).split("_")[1])) {
+                int wrongCount = questionMasterStatics.getWrongCount();
+                questionMasterStatics.setWrongCount(++wrongCount);
+                erningPoint--;
+                questionMaster.setSelectedAnswerString(wrongAnswerRepository.findOne(Long.parseLong(rightWrongList.get(i).split("_")[2])).getOptionText());
+            } else if ("R".equals(rightWrongList.get(i).split("_")[1])) {
+                int rightCount = questionMasterStatics.getRightCount();
+                questionMasterStatics.setRightCount(++rightCount);
+                erningPoint++;
+                questionMaster.setSelectedAnswerString(rightAnswerRepository.findOne(Long.parseLong(rightWrongList.get(i).split("_")[2])).getOptionText());
+            }
+
+            questionMasterStaticsRepository.saveAndFlush(questionMasterStatics);
+
+
+            //Set QuestionMasterForUser's questionMaster;
+            questionMaster.setRightWrongString(rightWrongList.get(i).split("_")[1]);
+            questionMaster.setQuestionMasterStatics(questionMasterStatics);
+            List<QuestionMaster> tempQMList = questionMasterForUser.getQuestionMasterList();
+            tempQMList.add(questionMaster);
+            questionMasterForUser.setQuestionMasterList(tempQMList);
+        }
+
+        questionMasterForUser.setErningPoint(erningPoint);
+        return questionMasterForUser;
+    }
 
-    private QuestionMasterForUser assembleQuestionMasterForUser(List<Long> questionMasterIdList) {
+    private QuestionMasterForUser assembleQuestionMasterForUserForTryPages(List<Long> questionMasterIdList) {
         QuestionMasterForUser questionMasterForUser = new QuestionMasterForUser();
         ArrayList<QuestionMaster> questionMasterList = new ArrayList<>();
 
@@ -116,7 +215,7 @@ public class TryQuestionResource {
         }
 
         questionMasterIdList.forEach(questionMasterId -> {
-            QuestionMaster questionMaster = questionMasterService.findOne(questionMasterId);
+            QuestionMaster questionMaster = questionMasterRepository.findOne(questionMasterId);
 
             Set<AnswersForUser> answersForUserSet = new HashSet<>();
 
diff --git a/src/main/resources/.h2.server.properties b/src/main/resources/.h2.server.properties
index a23fb27..f4acba4 100644
--- a/src/main/resources/.h2.server.properties
+++ b/src/main/resources/.h2.server.properties
@@ -1,5 +1,5 @@
 #H2 Server Properties
-#Mon Jan 16 22:38:56 KST 2017
+#Mon Jan 23 00:20:30 KST 2017
 0=JHipster H2 (Disk)|org.h2.Driver|jdbc\:h2\:file\:./target/h2db/db/itinterview|itinterview
 webAllowOthers=true
 webPort=8082
diff --git a/src/main/webapp/app/question/try-question/tryQuestion-new.controller.js b/src/main/webapp/app/question/try-question/tryQuestion-new.controller.js
index 633a92b..77add6b 100644
--- a/src/main/webapp/app/question/try-question/tryQuestion-new.controller.js
+++ b/src/main/webapp/app/question/try-question/tryQuestion-new.controller.js
@@ -6,13 +6,18 @@
         .controller('TryQuestionNewController', TryQuestionNewController);
 
 
-    TryQuestionNewController.$inject = ['$scope', 'TryQuestionNew', 'category3SelectboxVal', 'Principal'];
+    TryQuestionNewController.$inject = ['$scope', '$http', '$state', 'previousState', 'TryQuestionNew', 'category3SelectboxVal', 'Principal'];
 
-    function TryQuestionNewController ($scope, TryQuestionNew, category3SelectboxVal, Principal) {
+    function TryQuestionNewController ($scope, $http, $state, previousState, TryQuestionNew, category3SelectboxVal, Principal) {
         var vm = this;
         vm.account = null;
         vm.isAuthenticated = null;
 
+        if(previousState.name != 'tryQuestion') {
+            alert("잘못된 접근입니다");
+            $state.go('tryQuestion');
+        }
+
         vm.questionMasterForUser = TryQuestionNew.postQuestionListbyCategory3({category3SelectboxVal : category3SelectboxVal});
 
         $scope.$on('authenticationSuccess', function() {
@@ -34,12 +39,26 @@
         $scope.submitTryQuestionForm = function() {
             $scope.formData.startTime = vm.questionMasterForUser.startTime;
             $scope.formData.generatedId = vm.questionMasterForUser.generatedId;
+            $scope.formData.questionOne = vm.questionMasterForUser.questionMasterList[0].id;
+            $scope.formData.questionTwo = vm.questionMasterForUser.questionMasterList[1].id;
+            $scope.formData.questionThree = vm.questionMasterForUser.questionMasterList[2].id;
+            $scope.formData.questionFour = vm.questionMasterForUser.questionMasterList[3].id;
+            $scope.formData.questionFive = vm.questionMasterForUser.questionMasterList[4].id;
+            $scope.formData.questionSix = vm.questionMasterForUser.questionMasterList[5].id;
+            $scope.formData.questionSeven = vm.questionMasterForUser.questionMasterList[6].id;
+
+            $http.post('api/question/tryQuestionAnswer/', $scope.formData, {
+                headers: { 'Content-Type': 'application/json; charset=UTF-8'},
+            }).success(function (response) {
+                $state.go("tryQuestionNew.result", {resultData: response});
+            });
 
-            TryQuestionNew.postSubmitTryQuestionForm($scope.formData);
+            //var resultData = TryQuestionNew.postSubmitTryQuestionForm($scope.formData);
+            //$state.go("tryQuestionNew.result", {resultData: resultData});
         };
 
         $scope.timerFinished = function (){
-            alert("finished");
+            //alert("finished");
         };
 
     }
diff --git a/src/main/webapp/app/question/try-question/tryQuestion-new.service.js b/src/main/webapp/app/question/try-question/tryQuestion-new.service.js
index 180387b..4cb05c1 100644
--- a/src/main/webapp/app/question/try-question/tryQuestion-new.service.js
+++ b/src/main/webapp/app/question/try-question/tryQuestion-new.service.js
@@ -22,13 +22,16 @@
                     }
                     return data;
                 }
-            },
+            }/*,
             'postSubmitTryQuestionForm': {
                 url: 'api/question/tryQuestionAnswer/',
                 method: 'POST',
                 headers: { 'Content-Type': 'application/json; charset=UTF-8'},
-                data: {submitTryQuestionForUser: '@formData'}
-            }
+                data: {submitTryQuestionForUser: '@formData'},
+                transformResponse: function (data) {
+                    return data;
+                }
+            }*/
         });
 
     }
diff --git a/src/main/webapp/app/question/try-question/tryQuestion-result.controller.js b/src/main/webapp/app/question/try-question/tryQuestion-result.controller.js
new file mode 100644
index 0000000..82c3bb3
--- /dev/null
+++ b/src/main/webapp/app/question/try-question/tryQuestion-result.controller.js
@@ -0,0 +1,37 @@
+(function() {
+    'use strict';
+
+    angular
+        .module('itinterviewApp')
+        .controller('TryQuestionResultController', TryQuestionResultController);
+
+
+    TryQuestionResultController.$inject = ['$scope', '$state', 'previousState', 'Principal'];
+
+    function TryQuestionResultController ($scope, $state, previousState, Principal) {
+        var vm = this;
+        vm.account = null;
+        vm.isAuthenticated = null;
+        vm.resultData = $state.params.resultData;
+
+        if(previousState.name.split(".")[0] != 'tryQuestionNew') {
+            alert("잘못된 접근입니다");
+            $state.go('tryQuestion');
+        }
+
+        $scope.$on('authenticationSuccess', function() {
+            getAccount();
+        });
+
+        getAccount();
+
+        function getAccount() {
+            Principal.identity().then(function(account) {
+                vm.account = account;
+                vm.isAuthenticated = Principal.isAuthenticated;
+            });
+        }
+
+
+    }
+})();
diff --git a/src/main/webapp/app/question/try-question/tryQuestion-result.html b/src/main/webapp/app/question/try-question/tryQuestion-result.html
new file mode 100644
index 0000000..c6817aa
--- /dev/null
+++ b/src/main/webapp/app/question/try-question/tryQuestion-result.html
@@ -0,0 +1,100 @@
+<div class="page-content-inner">
+    <div class="panel-body">
+        <div class="margin-bottom-50">
+            <div class="invoice-block">
+                <div class="row">
+                    <div class="col-md-6" >
+                        <br/>
+                        <!-- Example State Default -->
+                        <div class="step-block step-success">
+                            <span class="step-digit">92.7</span>
+                            <div class="step-desc">
+                                <span class="step-title">{{vm.account.login}} 님은 Hive Category에서</span>
+                                <p>상위 2.25% 입니다</p>
+                            </div>
+                        </div>
+                        <!-- End Example State Default -->
+
+                        <!-- Example State Error -->
+                        <div class="step-block step-primary">
+                            <span class="step-digit">{{ vm.resultData.erningPoint }}</span>
+                            <div class="step-desc">
+                                <span class="step-title">이번 문제풀이에서 획득한 점수는</span>
+                                <p>{{ vm.resultData.erningPoint }} 점 입니다</p>
+                            </div>
+                        </div>
+                    </div>
+                    <div class="col-md-6 text-right" >
+                        <br/>
+                        <!-- End Example State Error -->
+                        <!-- Example State Current -->
+                        <div class="step-block step-danger">
+                            <span class="step-digit">3</span>
+                            <div class="step-desc">
+                                <span class="step-title">Block Title</span>
+                                <p>Waiting for review</p>
+                            </div>
+                            <!-- End Example State Current -->
+                        </div>
+                        <!-- Example State Disabled -->
+                        <div class="step-block step-secondary">
+                            <span class="step-digit">14</span>
+                            <div class="step-desc">
+                                <span class="step-title">Disabled</span>
+                                <p>Waiting for review</p>
+                            </div>
+                            <!-- End Example State Disabled -->
+                        </div>
+                    </div>
+                </div>
+                <div class="table-responsive">
+                    <table class="table table-hover text-right">
+                        <thead>
+                        <tr>
+                            <th class="text-center">#</th>
+                            <th>문제</th>
+                            <th class="text-right">선택답안</th>
+                            <th class="text-right">결과</th>
+                            <th class="text-right">정답률</th>
+                        </tr>
+                        </thead>
+                        <tbody>
+                        <tr ng-repeat="questionMaster in vm.resultData.questionMasterList track by questionMaster.id">
+                            <td class="text-center">{{ questionMaster.id }}</td>
+                            <td class="text-left">{{ questionMaster.title }}</td>
+                            <td>{{ questionMaster.selectedAnswerString }}</td>
+                            <td ng-if="questionMaster.rightWrongString === 'R'">O</td>
+                            <td ng-if="questionMaster.rightWrongString === 'W'">X</td>
+                            <td>{{ questionMaster.questionMasterStatics.rightCount * 100 / (questionMaster.questionMasterStatics.rightCount + questionMaster.questionMasterStatics.wrongCount) | number:2 }} %</td>
+                        </tr>
+                        </tbody>
+                    </table>
+                </div>
+                <div class="text-right clearfix">
+                    <div class="pull-right">
+                        <p>
+                            Sub - Total amount: <strong><span>$5,700.00</span></strong>
+                        </p>
+                        <p>
+                            VAT: <strong><span>$57.00</span></strong>
+                        </p>
+                        <p class="page-invoice-amount">
+                            <strong>Grand Total: <span>$5,757.00</span></strong>
+                        </p>
+                        <br/>
+                    </div>
+                </div>
+                <div class="text-right">
+                    <button type="submit" class="btn btn-primary">
+                        <i class="icmn-checkmark margin-right-5"></i>
+
+                    </button>
+                    <button type="button" class="btn btn-default">
+                        <i class="icmn-printer margin-right-5"></i>
+                        Print
+                    </button>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
diff --git a/src/main/webapp/app/question/try-question/tryQuestion.controller.js b/src/main/webapp/app/question/try-question/tryQuestion.controller.js
index 16aa96e..a820637 100644
--- a/src/main/webapp/app/question/try-question/tryQuestion.controller.js
+++ b/src/main/webapp/app/question/try-question/tryQuestion.controller.js
@@ -17,7 +17,6 @@
         vm.predicate = 'id';
         vm.reset = reset;
         vm.reverse = true;
-        vm.category3SelectboxVal = 'tesetCazen';
 
         loadAll();
         selectBoxInit('category1Selectbox');
@@ -54,35 +53,6 @@
             }
         }
 
-        /*function save () {
-            vm.isSaving = true;
-            if (vm.uploadQuestion.id !== null) {
-                UploadQuestion.update(vm.uploadQuestion, onSaveSuccess, onSaveError);
-            } else {
-                //Get Slider Data
-                vm.uploadQuestion.difficulty = $("#difficulty-slider").data("from");
-
-                $scope.upRightAnswersArray = [];
-                $scope.upWrongAnswersArray = [];
-
-                for (var i = 0; i < $scope.upRightAnswers.length; i++) {
-                    if(vm.upRightAnswers[i] != null) {
-                        $scope.upRightAnswersArray.push(vm.upRightAnswers[i]);
-                    }
-                }
-                vm.uploadQuestion.upRightAnswers = $scope.upRightAnswersArray;
-
-                for (var i = 0; i < $scope.upWrongAnswers.length; i++) {
-                    if(vm.upWrongAnswers[i] != null) {
-                        $scope.upWrongAnswersArray.push(vm.upWrongAnswers[i]);
-                    }
-                }
-                vm.uploadQuestion.upWrongAnswers = $scope.upWrongAnswersArray;
-
-                UploadQuestion.save(vm.uploadQuestion, onSaveSuccess, onSaveError);
-            }
-        }*/
-
         function initCategorySelectBox(selectbox, cdTp, selectedVal, parentId) {
             selectbox.find("option").remove();
 
diff --git a/src/main/webapp/app/question/try-question/tryQuestion.state.js b/src/main/webapp/app/question/try-question/tryQuestion.state.js
index ddca6f6..5388085 100644
--- a/src/main/webapp/app/question/try-question/tryQuestion.state.js
+++ b/src/main/webapp/app/question/try-question/tryQuestion.state.js
@@ -47,6 +47,14 @@
                 resolve: {
                     category3SelectboxVal: ['$stateParams', function($stateParams) {
                         return $stateParams.category3SelectboxVal;
+                    }],
+                    previousState: ["$state", function ($state) {
+                        var currentStateData = {
+                            name: $state.current.name || 'tryQuestion',
+                            params: $state.params,
+                            url: $state.href($state.current.name, $state.params)
+                        };
+                        return currentStateData;
                     }]
                 }
 
@@ -114,6 +122,32 @@
                 },
                 templateUrl: 'app/question/try-question/tryQuestion-seven.html'
             })
+            .state('tryQuestionNew.result', {
+                parent: 'tryQuestionNew',
+                url: '/tryQuestionNew-result',
+                data: {
+                    authorities: ['ROLE_USER'],
+                    pageTitle: '문제 풀이 결과 보기'
+                },
+                views: {
+                    'content@': {
+                        templateUrl: 'app/question/try-question/tryQuestion-result.html',
+                        controller: 'TryQuestionResultController',
+                        controllerAs: 'vm'
+                    }
+                },
+                params: {resultData: null},
+                resolve: {
+                    previousState: ["$state", function ($state) {
+                        var currentStateData = {
+                            name: $state.current.name || 'tryQuestionNew.seven',
+                            params: $state.params,
+                            url: $state.href($state.current.name, $state.params)
+                        };
+                        return currentStateData;
+                    }]
+                }
+            })
         ;
     }
 
diff --git a/src/main/webapp/content/css/source/components/steps.css b/src/main/webapp/content/css/source/components/steps.css
index c396547..c5963b1 100755
--- a/src/main/webapp/content/css/source/components/steps.css
+++ b/src/main/webapp/content/css/source/components/steps.css
@@ -12,7 +12,7 @@
 
 .step-block .step-digit {
     float: left;
-    margin-right: 20px;
+    margin-right: 40px;
     font-size: 42px;
     width: 56px;
     line-height: 55px;
diff --git a/src/main/webapp/content/css/source/multistepform/multiStepForm.css b/src/main/webapp/content/css/source/multistepform/multiStepForm.css
index d55ad31..aac5d23 100644
--- a/src/main/webapp/content/css/source/multistepform/multiStepForm.css
+++ b/src/main/webapp/content/css/source/multistepform/multiStepForm.css
@@ -21,7 +21,7 @@ pre                             { margin-bottom:10px; }
 
 /* ANIMATION STYLINGS
 ============================================================================= */
-#signup-form            { position:relative; min-height:300px; overflow:hidden; padding:30px; }
+#tryQuestionForm            { position:relative; min-height:300px; overflow:hidden; padding:30px; }
 
 /* basic styling for entering and leaving */
 /* left and right added to ensure full width */
diff --git a/src/main/webapp/content/images/itinterview_icon_white_border.png b/src/main/webapp/content/images/itinterview_icon_white_border.png
new file mode 100644
index 0000000000000000000000000000000000000000..81671c5ea1469a22235918d20fb196a2d8b2caa0
GIT binary patch
literal 14810
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

literal 0
HcmV?d00001

diff --git a/src/main/webapp/content/images/itinterview_icon_white_border_transparent.png b/src/main/webapp/content/images/itinterview_icon_white_border_transparent.png
new file mode 100644
index 0000000000000000000000000000000000000000..96fb48602337d30e3ba879ad7f90dbfb1003e023
GIT binary patch
literal 12548
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
GdHg?nEv?1?

literal 0
HcmV?d00001

diff --git a/src/main/webapp/index.html b/src/main/webapp/index.html
index a3f8e7b..3c4762e 100644
--- a/src/main/webapp/index.html
+++ b/src/main/webapp/index.html
@@ -175,6 +175,7 @@
     <script src="app/question/upload-question/uploadQuestion.state.js"></script>
     <script src="app/question/upload-question/uploadQuestion.service.js"></script>
     <script src="app/question/upload-question/uploadQuestion.controller.js"></script>
+    <script src="app/question/try-question/tryQuestion-result.controller.js"></script>
     <script src="app/question/try-question/tryQuestion-new.service.js"></script>
     <script src="app/question/try-question/tryQuestion-new.controller.js"></script>
     <script src="app/question/try-question/tryQuestion.state.js"></script>
-- 
2.10.1

